# PyBridge -- online contract bridge made easy.
# Copyright (C) 2004-2006 PyBridge Project.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


from zope.interface import Interface


class IBridgeTable(Interface):
    """IBridgeTable defines methods specific to bridge tables."""


    def gameMakeCall(self, call, position):
        """Add call from player (at position) to bidding."""


    def gamePlayCard(self, card, position):
        """Add card from player (at position) to current trick."""


    def requestNextGame(self, ready, player):
        """Indicates that player is ready (or not ready) to commence next game."""




class IBridgeTableEvents(Interface):
    """IBridgeTableEvents defines the events which may be generated by IBridgeTable.
    
    """


    def gameStarted(self, table, dealer, vulnNS, vulnEW):
        """Called when a game is started.
        
        @param table: reference to table.
        @param dealer:
        @param vulnNS:
        @param vulnEW:
        """


    def gameFinished(self, table):
        """Called when a game is finished.
        
        A game is finished if trick play is complete, or bidding is passed out,
        or it has been aborted.

        @param table: reference to table.
        """


    def gameCallMade(self, table, call, position):
        """Called when a player (at position) makes a call.
        
        @param table: reference to table.
        @param call:
        @param position:
        """


    def gameCardPlayed(self, table, card, position):
        """Called when a player (at position) plays a card.
        
        @param table: reference to table.
        @param card:
        @param position:
        """


    def gameHandRevealed(self, table, hand, position):
        """Called when a player's hand becomes visible.
        
        @param table: reference to table.
        @param hand:
        @param position:
        """

